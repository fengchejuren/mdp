<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:cache="http://www.springframework.org/schema/cache"  
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="   
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
   		http://www.springframework.org/schema/context 
   		http://www.springframework.org/schema/context/spring-context-3.0.xsd   
   		http://www.springframework.org/schema/aop 
   		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
   		http://www.springframework.org/schema/tx 
   		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
   		http://www.springframework.org/schema/task 
     	http://www.springframework.org/schema/task/spring-task-3.0.xsd
        http://www.springframework.org/schema/cache 
        http://www.springframework.org/schema/cache/spring-cache-3.0.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd">

	<context:annotation-config />
	<context:component-scan base-package="myfirst.dao" />  <!-- 自动扫描所有注解该路径 -->
	<context:component-scan base-package="myfirst.service"></context:component-scan>
	<context:component-scan base-package="myfirst.domain.pojo"></context:component-scan>
	
	<!-- 这个bean没有什么用处,是用来测试spring 通过xml配置文件获取bean的方法 myfirst.test.BeanFactory -->
	<bean id="loginCommand" class="myfirst.domain.vo.LoginCommand">
		<property name="userName" value="llla"></property>
		<property name="password" value="hao2134"></property>
	</bean>
	
	
	<bean id="messageAdapter" class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <!-- Support JSON --> 
                <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>
            </list>
        </property>
    </bean>
	    <bean id="exceptionMessageAdapter" class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver">
        <property name="messageConverters">
            <list>
                <!-- Support JSON --> 
                <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>
            </list>
        </property>
    </bean>
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
		<property name="url" value="jdbc:sqlserver://127.0.0.1:1433;databaseName=Stu_db2;" />
		<property name="username" value="sa" />
		<property name="password" value="sur0ckKingOa" />
	</bean>	
 		
<!-- 
	<bean id="dataSource"
    	class="org.logicalcobwebs.proxool.ProxoolDataSource">
	    <property name="driver">
	        <value>oracle.jdbc.driver.OracleDriver</value>
	    </property>
	    <property name="driverUrl">
	        <value>jdbc:oracle:thin:@172.16.24.73:1521:orcl?user=ckb_ext&amp;password=ckb_extadmin</value>
	    </property>
	    <property name="user" value="ckb_ext" />
	    <property name="password" value="ckb_extadmin" />
	    <property name="alias" value="Pool_dbname" />
	    <property name="prototypeCount" value="0" />
	    <property name="maximumConnectionCount" value="50" />
	    <property name="minimumConnectionCount" value="2" />
	    <property name="simultaneousBuildThrottle" value="50" />
	    <property name="houseKeepingSleepTime" value="90000" /> 
	    <property name="maximumConnectionLifetime" value="14400000" />	
	    <property name="houseKeepingTestSql" value="select CURRENT_DATE" />
	</bean>
-->
<!-- Dao的实现 
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<aop:config proxy-target-class="true">
		<aop:pointcut expression=" execution(* myfirst.service..*(..))" id="serviceMethod"/>
		<aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice"/>
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
-->

	<!-- 用于指定持久化实现厂商类 -->
       <bean id="persistenceProvider" class="org.hibernate.ejb.HibernatePersistence"/>
       <!-- 用于设置JPA实现厂商的特定属性 -->
       <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">  
     <property name="database" value="SQL_SERVER"/>  
    </bean>  

	<!-- 定义实体管理器工厂 -->
     <bean id="entityManagerFactory" autowire="byName"
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
           <property name="persistenceProvider" ref="persistenceProvider"/>
           <property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>  
      <property name="jpaDialect" ref="jpaDialect"/>  
           
           <property name="packagesToScan" value="myfirst.domain.pojo"/>
           
           <property name="jpaProperties">
            <props>
             <prop key="hibernate.dialect">org.hibernate.dialect.SQLServer2008Dialect</prop>
             <prop key="hibernate.connection.driver_class">oracle.jdbc.driver.OracleDriver</prop>
             <prop key="hibernate.max_fetch_depth">3</prop>
             <prop key="hibernate.jdbc.fetch_size">18</prop>
             <prop key="hibernate.jdbc.batch_size">10</prop>
             <prop key="hibernate.hbm2ddl.auto">update</prop>
             <prop key="hibernate.show_sql">true</prop>
             <prop key="hibernate.format_sql">true</prop>
             <prop key="javax.persistence.validation.mode">none</prop>
            </props>
           </property>
    </bean>
     <!-- 用于指定一些高级特性 -->
    <bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>  
    <!-- 配置事务管理器 -->  
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">  
     	<property name="entityManagerFactory" ref="entityManagerFactory" />  
    </bean> 
    <!-- 启用 annotation事务--> 
    <tx:annotation-driven transaction-manager="transactionManager"/> 
    
    <!-- 配置Spring Data JPA扫描目录 
    <jpa:repositories base-package="myfirst.domain.pojo"/>
--> 
    <tx:advice id="mytx"> 
     <tx:attributes> 
         <tx:method name="add*"    propagation="REQUIRED" /> 
         <tx:method name="del*"    propagation="REQUIRED" /> 
         <tx:method name="update*" propagation="REQUIRED" isolation="DEFAULT"/> 
         <tx:method name="*"       propagation="SUPPORTS" read-only="true"/> 
     </tx:attributes> 
</tx:advice> 

    <!-- 织入 --> 
    <aop:config> 
       <aop:advisor advice-ref="mytx" pointcut="execution(* myfirst.service.*.*(..) )"/> 
    </aop:config>	          

	<!-- 定时器，抓取网页新闻时用到 -->
	<task:scheduler id="scheduler" pool-size="10"/>
	<task:executor id="executor" keep-alive="3600" pool-size="100-200" 
		queue-capacity="500" rejection-policy="CALLER_RUNS" /> 
	<task:annotation-driven executor="executor" scheduler="scheduler"/>	
	
</beans>
